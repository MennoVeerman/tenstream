stages:
  - build_petsc
  - build
  - test

.build_petsc:default:
  stage: build_petsc
  script:
    - echo "Installing Petsc in ${PETSC_DIR}/${PETSC_ARCH}"
    - git clone -q --depth=1 https://gitlab.com/petsc/petsc.git $PETSC_DIR
    - export PETSC_DIR=$(pwd)/${PETSC_DIR}
    - cd $PETSC_DIR
    - >
      CMD="./configure
      --with-fortran
      --with-fortran-interfaces
      --with-valgrind
      --download-hdf5
      --download-zlib
      --with-precision=$PETSC_PRECISION
      --with-64-bit-indices=$PETSC_64_INTEGERS
      --with-debugging=$PETSC_DEBUGGING"
    - echo $CMD && $CMD
    - make $PETSC_ARCH
  artifacts:
    paths:
      - ${PETSC_DIR}/configure.log
      - ${PETSC_DIR}/${PETSC_ARCH}
    expire_in: 1 day
  variables:
    PETSC_DIR: petsc
    PETSC_ARCH: default
    PETSC_PRECISION: double
    PETSC_64_INTEGERS: 0
    PETSC_DEBUGGING: 1


build:docker:ubuntu:default:
  extends: .build_petsc:default
  image: ubuntu
  before_script:
    - apt-get -qq update && apt-get -qq install -fy build-essential gfortran python git openmpi-bin libopenmpi-dev libopenblas-dev
  tags:
    - docker.meteo.physik.lmu.de

#.build_docker_img: &build_docker_img
#  stage: build
#  script:
#    - echo '(Re-)Generating Dockerfile Images for' $CC $BUILD_TYPE $DOCKERFILE
#    - export WORKDIR=/root
#    - docker/build_dockerfile.sh "docker/Dockerfile.$DOCKERFILE" "$BUILD_TYPE" "$WORKDIR" "$CC" "$FC" "$CXX" mydockerfile && cat mydockerfile
#    - export myHASH=$( echo ${DOCKERFILE}_$(md5sum mydockerfile|cut -f 1 -d ' ') | tr '[:upper:]' '[:lower:]')
#    - echo "Docker Image Tag" $myHASH
#    - podman build -f mydockerfile -t $myHASH
#    - mkdir -p $LUTTMP && pushd $LUTTMP
#    - wget -q -cN -r -l 1 -nd -nH -A 'LUT*.mmap4' https://www.meteo.physik.uni-muenchen.de/~Fabian.Jakub/TenstreamLUT/
#    - popd
#    - podman run -v $(pwd):$WORKDIR/tenstream -v $LUTTMP:$WORKDIR/TenstreamLUT --rm -e BUILD_TYPE -e CC -e FC -e CXX -e WORKDIR -e SYST -t $myHASH $WORKDIR/tenstream/docker/build_and_run_tenstream_tests.sh
#
#
#build_ubuntu_latest_noMPI_GCC_DEBUG:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "DEBUG"
#    DOCKERFILE: "ubuntu_latest_noMPI"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
#
#build_ubuntu_latest_GCC_DEBUG:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "DEBUG"
#    DOCKERFILE: "ubuntu_latest"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
#
#build_ubuntu_rolling_GCC_DEBUG:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "DEBUG"
#    DOCKERFILE: "ubuntu_rolling"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
#
#build_ubuntu_rolling_GCC_DEBUG_int64:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "DEBUG_int64"
#    DOCKERFILE: "ubuntu_rolling"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
#
#build_ubuntu_rolling_GCC_DEBUG_single:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "DEBUG_single"
#    DOCKERFILE: "ubuntu_rolling"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
#
#build_ubuntu_rolling_GCC_RELEASE_single_int64:
#  <<: *build_docker_img
#  variables:
#    CC: "mpicc"
#    FC: "mpif90"
#    CXX: "mpicxx"
#    BUILD_TYPE: "RELEASE_single_int64"
#    DOCKERFILE: "ubuntu_rolling"
#    SYST: "ubuntu"
#    LUTTMP: "/local/gitlabCI_TenstreamLUT"
